##
## EPITECH PROJECT, 2019
## Makefile
## File description:
## for evalexpr
##

SRC_LIB		=lib/my/concat_params.c \
		lib/my/my_strcat_char.c \
		lib/my/my_compute_power_rec.c \
		lib/my/my_strcmp.c \
		lib/my/my_compute_square_root.c \
		lib/my/my_strcpy.c \
		lib/my/my_delete_zeros.c \
		lib/my/my_strdup.c \
		lib/my/my_find_prime_sup.c \
		lib/my/my_str_isalpha.c \
		lib/my/my_getnbr.c \
		lib/my/my_str_islower.c \
		lib/my/my_isneg.c \
		lib/my/my_str_isnum.c \
		lib/my/my_is_prime.c \
		lib/my/my_str_isprintable.c \
		lib/my/my_putchar.c \
		lib/my/my_str_isupper.c \
		lib/my/my_put_nbr.c \
		lib/my/my_strlen.c \
		lib/my/my_putstr.c \
		lib/my/my_strlowcase.c \
		lib/my/my_revstr.c \
		lib/my/my_strncat.c \
		lib/my/my_showmem.c \
		lib/my/my_strncmp.c \
		lib/my/my_showstr.c \
		lib/my/my_strncpy.c \
		lib/my/my_show_word_array.c \
		lib/my/my_strstr.c \
		lib/my/my_sort_int_array.c \
		lib/my/my_str_to_word_array.c \
		lib/my/my_strcapitalize.c \
		lib/my/my_strupcase.c \
		lib/my/my_strcat.c \
		lib/my/my_swap.c

SRC		= $(SRC_LIB) \
		src/flag_functions0.c\
		src/flag_functions1.c\
	 	src/flag_functions2.c\
	    	src/formating.c\
		src/formating1.c\
		src/formating2.c\
		src/my_declare_structure.c\
		src/my_getnbr2.c\
	    	src/my_printf.c \
		src/shortthings_forother_functions.c

OBJ		=	$(SRC:.c=.o)

NAME		=	libmy.a

SRC_TEST	=	$(SRC) \
tests/test_my_printf_percent.c \
		tests/pre_test.c \
		tests/test_my_printf_hasho.c \
		tests/test_my_printf_0d.c \
		tests/test_my_printf_hashp.c\
		tests/test_my_printf_plusd.c\
		tests/test_my_printf_b.c\
		tests/test_my_printf_hashx.c\
		tests/test_my_printf_s.c\
		tests/test_my_printf_c.c\
		tests/test_my_printf_i.c\
		tests/test_my_printf_spacesd.c\
		tests/test_my_printf_cs.c\
		tests/test_my_printf_mix.c\
		tests/test_my_printf_u.c\
		tests/test_my_printf_cx.c\
		tests/test_my_printf_nd.c\
		tests/test_my_printf_x.c\
		tests/test_my_printf_d.c\
		tests/test_my_printf_notexisting.c\
		tests/test_my_printf_hashcx.c\
		tests/test_my_printf_o.c

OBJ_TEST    =	$(SRC_TEST:.c=.o)

TEST	    =	test_run

SRC_MAIN    =	main.c $(SRC)

OBJ_MAIN    =   $(SRC_MAIN:.c=.o)

MAIN	    =	main

all:		$(NAME)

$(NAME):	$(OBJ)
		ar rc -o $(NAME) $(OBJ)

tests_run:	$(OBJ_TEST)
		gcc -o $(TEST) $(OBJ_TEST) -lcriterion
		./test_run

run:		$(OBJ_MAIN)
		gcc -o $(MAIN) $(OBJ_MAIN)
		./main

clean:
	rm -f $(OBJ) $(OBJ_TEST) $(OBJ_MAIN)

fclean: clean
	rm -f $(NAME) $(MAIN) $(TEST)

re:	fclean all

.PHONY: all clean fclean re
